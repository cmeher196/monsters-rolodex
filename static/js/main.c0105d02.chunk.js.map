{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handleChange","onChange","App","state","searchField","fetch","then","res","json","user","setState","this","filteredMonsters","filter","monsters","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJlBK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,qBAAKX,UAAU,SAAf,SACI,uBACIU,YAAaA,EACbE,SAAUD,QC8BPE,E,kDAhCb,aAAc,IAAD,8BACX,gBAEKC,MAAM,CACTX,QAAS,GACTY,YAAc,IALL,E,gEAUO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAClB,QAAQiB,S,+BAG9B,IAAD,SAC0BE,KAAKR,MAA9BX,EADD,EACCA,QAAUY,EADX,EACWA,YACXQ,EAAmBpB,EAAQqB,QAAO,SAAAC,GAAQ,OAAIA,EAASpB,KAAKqB,cAAcC,SAASZ,EAAYW,kBACvG,OACE,sBAAK1B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAc,iBACdC,aAAgB,SAAAiB,GAAC,OAAE,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAU3B,QAAUoB,W,GA3BRQ,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c0105d02.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props =>(\r\n    <div className='card-container'>\r\n        <img alt=\"monster\"  src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component.jsx';\r\n\r\nexport const CardList = props =>(\r\n    <div className='card-list'>\r\n        {props.monster.map(monster=>(\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n)","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <div className=\"search\">\r\n        <input\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    </div>\r\n\r\n)","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './component/card-list/card-list.component'\nimport { SearchBox } from './component/search-box/search-box.component'\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state={\n      monster: [],\n      searchField : ''\n    }\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res=> res.json())\n    .then(user => this.setState({monster:user}))\n  }\n\n  render(){\n    const {monster , searchField} = this.state;\n    const filteredMonsters = monster.filter(monsters => monsters.name.toLowerCase().includes(searchField.toLowerCase()))\n  return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox \n        placeholder = 'Search Monster'\n        handleChange = {e=>this.setState({searchField:e.target.value})}\n      />\n      <CardList monster ={filteredMonsters} />\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}